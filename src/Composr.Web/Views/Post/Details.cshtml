@model Composr.Web.ViewModels.PostViewModel
@{
    ViewBag.Title = "Post Details";
}

<ol class="breadcrumb">
    <li><a href="/admin/blogs">blogs</a></li>
    <li><a href="/admin/blogs/@Model.BlogId/posts">posts</a></li>
    <li class="active">details</li>
</ol>

<form method="post" name="myform" id="myform">
    <div class="btn-toolbar" role="toolbar">
        <button type="submit" class="btn btn-primary pull-right">Save</button>
        <a class="btn btn-default pull-right" href="/admin/blogs/@Model.BlogId/posts">Cancel</a>
        <select class="btn btn-default pull-right" id="poststatus" name="poststatus" asp-for="PostStatus" asp-items="Html.GetEnumSelectList<Composr.Core.PostStatus>()"></select>
    </div>
    <div asp-validation-summary="ValidationSummary.ModelOnly"></div>

    <div class="form-group">
        <label for="title">Title</label><input class="form-control" type="text" name="title" id="title" asp-for="Title" value="@Model.Title" required minlength="5" maxlength="100"/>
        <span asp-validation-for="Title" class="label label-warning"></span>
    </div>

    <div class="form-group">
        <label for="urn">URN</label><input class="form-control" type="text" name="urn" id="urn" asp-for="URN" value="@Model.URN" maxlength="250" />
        <span asp-validation-for="URN"></span>
    </div>

    <div class="form-group">
        <label id="metadescriptionlabel" for="metadescription">Meta Description</label><input class="form-control" type="text" name="metadescription" id="metadescription" asp-for="MetaDescription" value="@Model.MetaDescription" minlength="115" maxlength="155"/>
        <span asp-validation-for="MetaDescription"></span>
    </div>       

    <div class="form-group">
        <label for="tags">Main Ingredients</label><input class="form-control" type="text" name="tags" id="tags" asp-for="Tags" value="@Model.Tags" />
    </div>

    <div class="form-group">
        <label for="body">Body</label>
        <textarea autofocus class="form-control" name="body" id="body" asp-for="Body" rows="10" required>@Model.Body</textarea>
        <span asp-validation-for="Body"></span>
    </div>
</form>

@section scripts {
<script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
    <script src="~/lib/tinymce/tinymce.min.js"></script>

    <script>
        tinyMCE.init({
            plugins: [
                'advlist autolink lists link image charmap print preview hr anchor pagebreak',
                'searchreplace wordcount visualblocks visualchars code fullscreen',
                'insertdatetime media nonbreaking save table contextmenu directionality',
                'emoticons template paste textcolor colorpicker textpattern imagetools'
            ],
            toolbar1: 'insertfile undo redo | styleselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | link image media | print preview | code',
            image_advtab: true,
            selector: '#body',
            menubar: false,
            setup: function (editor) {
                editor.on('change', function () {
                    editor.save();
                });
            },
            onchange_callback: function (editor) {
                tinyMCE.triggerSave();
                $("#" + editor.id).valid();
            }
        });

        $(function () {
            var validator = $("#myform").submit(function () {
                // update underlying textarea before submit validation
                tinyMCE.triggerSave();
            }).validate({
                ignore: "",
                rules: {
                    title: "required",
                    content: "required"
                },
                errorPlacement: function (label, element) {
                    // position error label after generated textarea
                    if (element.is("textarea")) {
                        label.insertAfter(element.next());
                    } else {
                        label.insertAfter(element)
                    }
                }
            });
            validator.focusInvalid = function () {
                // put focus on tinymce on submit validation
                if (this.settings.focusInvalid) {
                    try {
                        var toFocus = $(this.findLastActive() || this.errorList.length && this.errorList[0].element || []);
                        if (toFocus.is("textarea")) {
                            tinyMCE.get(toFocus.attr("id")).focus();
                        } else {
                            toFocus.filter(":visible").focus();
                        }
                    } catch (e) {
                        // ignore IE throwing errors when focusing hidden elements
                    }
                }
            }
        })
    </script>

    <script type="text/javascript">
        $(document).ready(function () {
            updateCharacterCount();
            $('#metadescription').keyup(updateCharacterCount);
        });

        function updateCharacterCount() {
            $('#metadescriptionlabel').html("Meta Description (" + $('#metadescription').val().length + " characters)");
        }
    </script>
}